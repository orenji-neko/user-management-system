{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Create Account\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit Account\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_17_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.firstName.errors.required);\n  }\n}\nfunction AddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.lastName.errors.required);\n  }\n}\nfunction AddEditComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_33_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_33_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, AddEditComponent_div_33_div_2_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.email.errors.email);\n  }\n}\nfunction AddEditComponent_div_43_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_43_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.role.errors.required);\n  }\n}\nfunction AddEditComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 26);\n    i0.ɵɵtext(2, \"Change Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Leave blank to keep the same password\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_50_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_50_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, AddEditComponent_div_50_div_2_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.password.errors.minlength);\n  }\n}\nfunction AddEditComponent_div_55_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_55_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_55_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, AddEditComponent_div_55_div_2_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction AddEditComponent_span_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        title: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        role: ['', Validators.required],\n        password: ['', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\n        confirmPassword: ['']\n      }, {\n        validator: MustMatch('password', 'confirmPassword')\n      });\n      if (!this.isAddMode) {\n        this.accountService.getById(this.id).pipe(first()).subscribe(x => this.form.patchValue(x));\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createAccount();\n      } else {\n        this.updateAccount();\n      }\n    }\n    createAccount() {\n      this.accountService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Account created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateAccount() {\n      this.accountService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 62,\n    vars: 34,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\", \"col-7\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"role\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"User\"], [\"value\", \"Admin\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/admin/accounts\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [1, \"pt-3\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddEditComponent_h1_0_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(1, AddEditComponent_h1_1_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"label\");\n        i0.ɵɵtext(6, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 4);\n        i0.ɵɵelement(8, \"option\", 5);\n        i0.ɵɵelementStart(9, \"option\", 6);\n        i0.ɵɵtext(10, \"Mr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 7);\n        i0.ɵɵtext(12, \"Mrs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 8);\n        i0.ɵɵtext(14, \"Miss\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 9);\n        i0.ɵɵtext(16, \"Ms\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\");\n        i0.ɵɵtext(20, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"label\");\n        i0.ɵɵtext(25, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 13);\n        i0.ɵɵtemplate(27, AddEditComponent_div_27_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 2)(29, \"div\", 14)(30, \"label\");\n        i0.ɵɵtext(31, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 15);\n        i0.ɵɵtemplate(33, AddEditComponent_div_33_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 3)(35, \"label\");\n        i0.ɵɵtext(36, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"select\", 16);\n        i0.ɵɵelement(38, \"option\", 5);\n        i0.ɵɵelementStart(39, \"option\", 17);\n        i0.ɵɵtext(40, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"option\", 18);\n        i0.ɵɵtext(42, \"Admin\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(43, AddEditComponent_div_43_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(44, AddEditComponent_div_44_Template, 5, 0, \"div\", 0);\n        i0.ɵɵelementStart(45, \"div\", 2)(46, \"div\", 3)(47, \"label\");\n        i0.ɵɵtext(48, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 19);\n        i0.ɵɵtemplate(50, AddEditComponent_div_50_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 3)(52, \"label\");\n        i0.ɵɵtext(53, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 20);\n        i0.ɵɵtemplate(55, AddEditComponent_div_55_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(56, \"div\", 21)(57, \"button\", 22);\n        i0.ɵɵtemplate(58, AddEditComponent_span_58_Template, 1, 0, \"span\", 23);\n        i0.ɵɵtext(59, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"a\", 24);\n        i0.ɵɵtext(61, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.submitted && ctx.f.title.errors));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.submitted && ctx.f.firstName.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.submitted && ctx.f.lastName.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx.submitted && ctx.f.email.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, ctx.submitted && ctx.f.role.errors));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.role.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","AddEditComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","id","snapshot","params","isAddMode","form","group","title","required","firstName","lastName","email","role","password","minLength","nullValidator","confirmPassword","validator","getById","pipe","subscribe","x","patchValue","f","controls","onSubmit","submitted","clear","invalid","loading","createAccount","updateAccount","create","value","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\user-management-system\\client\\src\\app\\admin\\accounts\\add-edit.component.ts","D:\\user-management-system\\client\\src\\app\\admin\\accounts\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        this.form = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            role: ['', Validators.required],\r\n            password: ['', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\r\n            confirmPassword: ['']\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createAccount();\r\n        } else {\r\n            this.updateAccount();\r\n        }\r\n    }\r\n\r\n    private createAccount() {\r\n        this.accountService.create(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Account created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateAccount() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Create Account</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit Account</h1>\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Title</label>\r\n            <select formControlName=\"title\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Mr\">Mr</option>\r\n                <option value=\"Mrs\">Mrs</option>\r\n                <option value=\"Miss\">Miss</option>\r\n                <option value=\"Ms\">Ms</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-7\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Role</label>\r\n            <select formControlName=\"role\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"User\">User</option>\r\n                <option value=\"Admin\">Admin</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.role.errors.required\">Role is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!isAddMode\">\r\n        <h3 class=\"pt-3\">Change Password</h3>\r\n        <p>Leave blank to keep the same password</p>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/admin/accounts\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}