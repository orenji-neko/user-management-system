{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_17_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction UpdateComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_22_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction UpdateComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_27_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction UpdateComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_32_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_32_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, UpdateComponent_div_32_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction UpdateComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_42_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_42_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, UpdateComponent_div_42_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.minlength);\n  }\n}\nfunction UpdateComponent_div_47_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_47_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, UpdateComponent_div_47_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, UpdateComponent_div_47_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction UpdateComponent_span_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\nfunction UpdateComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let UpdateComponent = /*#__PURE__*/(() => {\n  class UpdateComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.account = this.accountService.accountValue;\n      this.loading = false;\n      this.submitted = false;\n      this.deleting = false;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        title: [this.account.title, Validators.required],\n        firstName: [this.account.firstName, Validators.required],\n        lastName: [this.account.lastName, Validators.required],\n        email: [this.account.email, [Validators.required, Validators.email]],\n        password: ['', [Validators.minLength(6)]],\n        confirmPassword: ['']\n      }, {\n        validator: MustMatch('password', 'confirmPassword')\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.accountService.update(this.account.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    onDelete() {\n      if (confirm('Are you sure?')) {\n        this.deleting = true;\n        this.accountService.delete(this.account.id).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Account deleted successfully', {\n              keepAfterRouteChange: true\n            });\n            this.router.navigate(['/'], {\n              relativeTo: this.route\n            });\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.deleting = false;\n          }\n        });\n      }\n    }\n  }\n  UpdateComponent.ɵfac = function UpdateComponent_Factory(t) {\n    return new (t || UpdateComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  UpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 57,\n    vars: 29,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"pt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function UpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Update Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\");\n        i0.ɵɵtext(6, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 3);\n        i0.ɵɵelement(8, \"option\", 4);\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Mr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Mrs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"Miss\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 8);\n        i0.ɵɵtext(16, \"Ms\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, UpdateComponent_div_17_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"label\");\n        i0.ɵɵtext(20, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵtemplate(22, UpdateComponent_div_22_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 10)(24, \"label\");\n        i0.ɵɵtext(25, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 12);\n        i0.ɵɵtemplate(27, UpdateComponent_div_27_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 13)(29, \"label\");\n        i0.ɵɵtext(30, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 14);\n        i0.ɵɵtemplate(32, UpdateComponent_div_32_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"h3\", 15);\n        i0.ɵɵtext(34, \"Change Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"p\");\n        i0.ɵɵtext(36, \"Leave blank to keep the same password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 1)(38, \"div\", 2)(39, \"label\");\n        i0.ɵɵtext(40, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 16);\n        i0.ɵɵtemplate(42, UpdateComponent_div_42_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 2)(44, \"label\");\n        i0.ɵɵtext(45, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"input\", 17);\n        i0.ɵɵtemplate(47, UpdateComponent_div_47_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 13)(49, \"button\", 18);\n        i0.ɵɵtemplate(50, UpdateComponent_span_50_Template, 1, 0, \"span\", 19);\n        i0.ɵɵtext(51, \" Update \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function UpdateComponent_Template_button_click_52_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵtemplate(53, UpdateComponent_span_53_Template, 1, 0, \"span\", 19);\n        i0.ɵɵtext(54, \" Delete \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"a\", 21);\n        i0.ɵɵtext(56, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.title.errors));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.firstName.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.lastName.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.email.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.deleting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.deleting);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return UpdateComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","UpdateComponent","constructor","formBuilder","route","router","accountService","alertService","accountValue","ngOnInit","form","group","title","account","required","firstName","lastName","email","password","minLength","confirmPassword","validator","f","controls","onSubmit","submitted","clear","invalid","loading","update","id","value","pipe","subscribe","next","success","keepAfterRouteChange","navigate","relativeTo","error","onDelete","confirm","deleting","delete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\user-management-system\\client\\src\\app\\profile\\update.component.ts","D:\\user-management-system\\client\\src\\app\\profile\\update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'update.component.html' })\r\nexport class UpdateComponent implements OnInit {\r\n    account = this.accountService.accountValue;\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    deleting = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            title: [this.account.title, Validators.required],\r\n            firstName: [this.account.firstName, Validators.required],\r\n            lastName: [this.account.lastName, Validators.required],\r\n            email: [this.account.email, [Validators.required, Validators.email]],\r\n            password: ['', [Validators.minLength(6)]],\r\n            confirmPassword: ['']\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.update(this.account.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    onDelete() {\r\n        if (confirm('Are you sure?')) {\r\n            this.deleting = true;\r\n            this.accountService.delete(this.account.id)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.alertService.success('Account deleted successfully', { keepAfterRouteChange: true });\r\n                        this.router.navigate(['/'], { relativeTo: this.route });\r\n                    },\r\n                    error: error => {\r\n                        this.alertService.error(error);\r\n                        this.deleting = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}","\r\n<h1>Update Profile</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Title</label>\r\n            <select formControlName=\"title\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Mr\">Mr</option>\r\n                <option value=\"Mrs\">Mrs</option>\r\n                <option value=\"Miss\">Miss</option>\r\n                <option value=\"Ms\">Ms</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n        </div>\r\n    </div>\r\n    <h3 class=\"pt-3\">Change Password</h3>\r\n    <p>Leave blank to keep the same password</p>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button type=\"submit\" [disabled]=\"loading\" class=\"btn btn-primary mr-2\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Update\r\n        </button>\r\n        <button type=\"button\" (click)=\"onDelete()\" [disabled]=\"deleting\" class=\"btn btn-danger\">\r\n            <span *ngIf=\"deleting\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Delete\r\n        </button>\r\n        <a routerLink=\"../\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}