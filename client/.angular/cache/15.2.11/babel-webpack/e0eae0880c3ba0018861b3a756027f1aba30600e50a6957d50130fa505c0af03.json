{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first, finalize } from 'rxjs/operators';\nlet ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(formBuilder, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.forgotPassword(this.f.email.value).pipe(first(), finalize(() => this.loading = false)).subscribe({\n      next: () => {\n        this.alertService.success('Please check your email for password reset instructions');\n      },\n      error: error => {\n        this.alertService.error(error);\n      }\n    });\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  templateUrl: 'forgot-password.component.html'\n})], ForgotPasswordComponent);\nexport { ForgotPasswordComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAA+CC,UAAU,QAAQ,gBAAgB;AACjF,SAASC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAKzC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAKhCC,YACYC,WAA+B,EAC/BC,cAA8B,EAC9BC,YAA0B;IAF1B,gBAAW,GAAXF,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IANxB,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;EAMb;EAEJC,QAAQ;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC;KACtD,CAAC;EACN;EAEA;EACA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACJ,IAAI,CAACK,QAAQ;EAAE;EAErCC,QAAQ;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACT,YAAY,CAACU,KAAK,EAAE;IAEzB;IACA,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;MACnB;;IAGJ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACb,cAAc,CAACc,cAAc,CAAC,IAAI,CAACP,CAAC,CAACF,KAAK,CAACU,KAAK,CAAC,CACjDC,IAAI,CACDrB,KAAK,EAAE,EACPC,QAAQ,CAAC,MAAM,IAAI,CAACiB,OAAO,GAAG,KAAK,CAAC,CACvC,CACAI,SAAS,CAAC;MACPC,IAAI,EAAE,MAAK;QACP,IAAI,CAACjB,YAAY,CAACkB,OAAO,CAAC,yDAAyD,CAAC;MACxF,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACX,IAAI,CAACnB,YAAY,CAACmB,KAAK,CAACA,KAAK,CAAC;MAClC;KACH,CAAC;EACV;CACH;AA9CYvB,uBAAuB,eADnCJ,SAAS,CAAC;EAAE4B,WAAW,EAAE;AAAgC,CAAE,CAAC,GAChDxB,uBAAuB,CA8CnC;SA9CYA,uBAAuB","names":["Component","Validators","first","finalize","ForgotPasswordComponent","constructor","formBuilder","accountService","alertService","ngOnInit","form","group","email","required","f","controls","onSubmit","submitted","clear","invalid","loading","forgotPassword","value","pipe","subscribe","next","success","error","templateUrl"],"sourceRoot":"","sources":["D:\\user-management-system\\client\\src\\app\\account\\forgot-password.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first, finalize } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'forgot-password.component.html' })\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.forgotPassword(this.f.email.value)\r\n            .pipe(\r\n                first(),\r\n                finalize(() => this.loading = false)\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Please check your email for password reset instructions');\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}