{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction VerifyEmailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verifying... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verification failed, you can also verify your account using the \");\n    i0.ɵɵelementStart(2, \"a\", 3);\n    i0.ɵɵtext(3, \"forgot password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" page. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar EmailStatus = /*#__PURE__*/(() => {\n  (function (EmailStatus) {\n    EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n    EmailStatus[EmailStatus[\"Failed\"] = 1] = \"Failed\";\n  })(EmailStatus || (EmailStatus = {}));\n  return EmailStatus;\n})();\n// verify email\nexport let VerifyEmailComponent = /*#__PURE__*/(() => {\n  class VerifyEmailComponent {\n    constructor(route, router, accountService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.EmailStatus = EmailStatus;\n      this.emailStatus = EmailStatus.Verifying;\n    }\n    ngOnInit() {\n      const token = this.route.snapshot.queryParams['token'];\n      // remove token from URL to prevent HTTP referer leakage\n      this.router.navigate([], {\n        relativeTo: this.route,\n        replaceUrl: true\n      });\n      this.accountService.verifyEmail(token).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Verification successful, you can now login', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../login'], {\n            relativeTo: this.route\n          });\n        },\n        error: () => {\n          this.emailStatus = EmailStatus.Failed;\n        }\n      });\n    }\n  }\n  VerifyEmailComponent.ɵfac = function VerifyEmailComponent_Factory(t) {\n    return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n  };\n  VerifyEmailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VerifyEmailComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"card-header\"], [1, \"card-body\"], [4, \"ngIf\"], [\"routerLink\", \"../forgot-password\"]],\n    template: function VerifyEmailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \"Verify Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, VerifyEmailComponent_div_3_Template, 2, 0, \"div\", 2);\n        i0.ɵɵtemplate(4, VerifyEmailComponent_div_4_Template, 5, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Verifying);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Failed);\n      }\n    },\n    dependencies: [i3.NgIf, i1.RouterLink],\n    encapsulation: 2\n  });\n  return VerifyEmailComponent;\n})();","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;ICAlCC,2BAAkD;IAC9CA,8BACJ;IAAAA,iBAAM;;;;;IACNA,2BAA+C;IAC3CA,iFAAgE;IAAAA,4BAAmC;IAAAA,+BACvF;IAAAA,iBAAI;IAACA,uBACrB;IAAAA,iBAAM;;;ADFV,IAAKC,WAGJ;EAHD,WAAKA,WAAW;IACZA,uDAAS;IACTA,iDAAM;EACV,CAAC,EAHIA,WAAW,KAAXA,WAAW;EAAA,OAAXA,WAGJ;AAAA;AACD;AAEA,WAAaC,oBAAoB;EAA3B,MAAOA,oBAAoB;IAI7BC,YACYC,KAAqB,EACrBC,MAAc,EACdC,cAA8B,EAC9BC,YAA0B;MAH1B,UAAK,GAALH,KAAK;MACL,WAAM,GAANC,MAAM;MACN,mBAAc,GAAdC,cAAc;MACd,iBAAY,GAAZC,YAAY;MAPxB,gBAAW,GAAGN,WAAW;MACzB,gBAAW,GAAGA,WAAW,CAACO,SAAS;IAO/B;IAEJC,QAAQ;MACJ,MAAMC,KAAK,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC;MAEtD;MACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE,EAAE;QAAEC,UAAU,EAAE,IAAI,CAACV,KAAK;QAAEW,UAAU,EAAE;MAAI,CAAE,CAAC;MAEtE,IAAI,CAACT,cAAc,CAACU,WAAW,CAACN,KAAK,CAAC,CACjCO,IAAI,CAAClB,KAAK,EAAE,CAAC,CACbmB,SAAS,CAAC;QACPC,IAAI,EAAE,MAAK;UACP,IAAI,CAACZ,YAAY,CAACa,OAAO,CACrB,4CAA4C,EAC5C;YAAEC,oBAAoB,EAAE;UAAI,CAAE,CACjC;UACD,IAAI,CAAChB,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAACV;UAAK,CAAE,CAAC;QAClE,CAAC;QACDkB,KAAK,EAAE,MAAK;UACR,IAAI,CAACC,WAAW,GAAGtB,WAAW,CAACuB,MAAM;QACzC;OACH,CAAC;IACV;;;qBA/BStB,oBAAoB;EAAA;;UAApBA,oBAAoB;IAAAuB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZjC7B,6BAAwB;QAAAA,4BAAY;QAAAA,iBAAK;QACzCA,8BAAuB;QACnBA,qEAEM;QACNA,qEAGM;QACVA,iBAAM;;;QAPIA,eAA0C;QAA1CA,mEAA0C;QAG1CA,eAAuC;QAAvCA,gEAAuC;;;;;;SDOpCE,oBAAoB;AAAA","names":["first","i0","EmailStatus","VerifyEmailComponent","constructor","route","router","accountService","alertService","Verifying","ngOnInit","token","snapshot","queryParams","navigate","relativeTo","replaceUrl","verifyEmail","pipe","subscribe","next","success","keepAfterRouteChange","error","emailStatus","Failed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\user-management-system\\client\\src\\app\\account\\verify-email.component.ts","D:\\user-management-system\\client\\src\\app\\account\\verify-email.component.html"],"sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\nenum EmailStatus {\r\n    Verifying,\r\n    Failed\r\n}\r\n// verify email\r\n@Component({ templateUrl: 'verify-email.component.html' })\r\nexport class VerifyEmailComponent implements OnInit {\r\n    EmailStatus = EmailStatus;\r\n    emailStatus = EmailStatus.Verifying;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const token = this.route.snapshot.queryParams['token'];\r\n\r\n        // remove token from URL to prevent HTTP referer leakage\r\n        this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\r\n\r\n        this.accountService.verifyEmail(token)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success(\r\n                        'Verification successful, you can now login',\r\n                        { keepAfterRouteChange: true }\r\n                    );\r\n                    this.router.navigate(['../login'], { relativeTo: this.route });\r\n                },\r\n                error: () => {\r\n                    this.emailStatus = EmailStatus.Failed;\r\n                }\r\n            });\r\n    }\r\n}\r\n","\r\n<h3 class=\"card-header\">Verify Email</h3>\r\n<div class=\"card-body\">\r\n    <div *ngIf=\"emailStatus == EmailStatus.Verifying\">\r\n        Verifying...\r\n    </div>\r\n    <div *ngIf=\"emailStatus == EmailStatus.Failed\">\r\n        Verification failed, you can also verify your account using the <a routerLink=\"../forgot-password\">forgot\r\n            password</a> page.\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}